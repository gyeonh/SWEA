def find_max_and_idx(args):
    maxC = args[0]
    cnt = 0
    idx = 0
    for i in range(1, len(args)):
        if args[i] >= maxC:
            maxC = args[i]
            idx = cnt + 1   # 현재까지의 최대값에 대한 인덱스를 가지고 있기 위해 변수 생성
        cnt += 1    # 인덱스를 찾기 위한 계산(최대값이든 아니든 계산)
                    # args[0]가 max일 수도 있으니 1 더하는걸 뒤에 배치
                    # 대신, if문 안에서 현재 최대값에 대한 idx에 1 더하는 연산 필요  
    return idx, maxC    # idx는 인덱스(즉, 개수가 가장 많은 "원소"를 의미), maxC는 최대 개수를 의미함
 
T = int(input())
for tc in range(1, T+1):
    N = int(input())
    cards = list(map(int, input()))
    arr = [0]*10 # 0~9
    
    for i in range(N):
        arr[cards[i]] += 1    # 숫자와 같은 인덱스에 1 더해주기
                              # 해당 숫자(=인덱스번호)의 개수를 나타내는 배열 arr 생성
                              
    result = find_max_and_idx(arr)    # 개수가 가장 많은 원소 찾기
    
    print(f'#{tc} {result[0]} {result[1]}')
